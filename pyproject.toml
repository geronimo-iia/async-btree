[tool.poetry]

name = "async_btree"
version = "1.2.0.dev"
description = "Async behavior tree"
license = "MIT"
authors = ["Jerome Guibert <jguibert@gmail.com>"]
readme = "README.md"
homepage = "https://pypi.org/project/async_btree"
documentation = "https://geronimo-iia.github.io/async-btree/"
repository = "https://github.com/geronimo-iia/async-btree"
keywords = ["behavior-tree", "asyncio"]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.8"

# Optional dependency
curio = { version = "^1", optional = true }

[tool.poetry.extras]
curio = ["curio"]


[tool.poetry.dev-dependencies]
black = "22.3.0" # The uncompromising code formatter.
isort = "5.9.3" #A Python utility / library to sort Python imports.
# https://flakehell.readthedocs.io/
flakehell = "0.9.0"
flake8="3.9.2"
# https://github.com/DmytroLitvinov/awesome-flake8-extensions
flake8-bugbear = "^20.11.1"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.3.1"
flake8-docstrings = "^1.5.0"
flake8-eradicate = "^1.0.0"
flake8-isort = "^4.0.0"
flake8-mutable = "^1.2.0"
flake8-pytest-style = "^1.3.0"
flake8-spellcheck = "^0.20.0"
pep8-naming = "^0.11.1"

# mypy
mypy = "*"

# Unit Testing
pytest = "^6" # pytest: simple powerful testing with Python
pytest-curio = "^1.0.1"
pytest-cov = "^2" # Pytest plugin for measuring coverage.
pytest-mock = "^3"
xdoctest = "^0.15.0" # A rewrite of the builtin doctest module
coverage = {version = "*", extras = ["toml"]}


# Documentation
sphinx = "^2.3.1"
sphinx_rtd_theme = "^0.4.3"
m2r = "^0.2.1"  # M2R converts a markdown file including reStructuredText (rst)
autodocsumm = "*"


[tool.poetry.group.dev.dependencies]
types-setuptools = "^65.6.0.2"

[tool.black]
# see https://black.readthedocs.io/en/stable/
target-version = ["py38"]
skip-string-normalization = true
line_length = 120

[tool.isort]
# see https://timothycrosley.github.io/isort/
not_skip = "__init__.py"
multi_line_output = 3
known_standard_library = "dataclasses,typing_extensions"
known_first_party = "async_btree"
known_third_party = ["curio", "pkg_resources", "toml"]
combine_as_imports = true
force_grid_wrap = false
include_trailing_comma = true
lines_after_imports = 2
line_length = 120
use_parentheses = true
ensure_newline_before_comments = true


# see https://coverage.readthedocs.io/en/coverage-5.0.3/config.html
[tool.coverage.paths]
source = ["{{cookiecutter.product_name_package}}_{{cookiecutter.component_name_package}}"]

[tool.coverage.run]
branch = true
data_file = ".cache/coverage"
source = ["async_btree"]
omit = ["tests/*", ".venv/*", "*/__main__.py", "examples/*"]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "raise NotImplementedError"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--strict-markers --pdbcls=tests:Debugger -r sxX --cov=async_btree --cov-report=html --cov-report=term-missing:skip-covered"
cache_dir = ".cache"

[tool.flakehell]
extended_default_ignore = []
exclude = ["README.md"]
format = "colored"
max_line_length = 120
show_source = true
max-complexity = 18
docstring-convention = "google"

[tool.flakehell.plugins]
#flake8-bandit = ["+*", "-S322"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
#flake8-darglint = ["+*", "-DAR201"]
# explicitly disable docstring
# D100: Missing docstring in public module
# D101: Missing docstring in public class
# D102: Missing docstring in public method
# D103: Missing docstring in public function
# D104: Missing docstring in public package
# D105: Missing docstring in magic method
# D107: Missing docstring in __init__
# D202: No blank lines allowed after function docstring
flake8-docstrings = ["+*", "-D100", "-D101", "-D102", "-D103", "-D104", "-D105", "-D107", "-D202" ]
flake8-eradicate = ["+*", "-E800"]
flake8-isort = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-spellcheck = ["+*", "-SC200", "-SC100"]
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*", "-W503"]
pyflakes = ["+*", "-W503"]
pylint = ["+*"]


[mypy]
cache_dir = ".cache/mypy/"
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[build-system]
requires = ["poetry>=1.1.12"]
build-backend = "poetry.core.masonry.api"

